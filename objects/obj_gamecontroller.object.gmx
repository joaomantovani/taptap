<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_gamecontroller</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initiate the music
//index_music = audio_play_sound(snd_bgdmusic, 10, true);
music_is_on = false;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initiate the ore limits
ore_min = 0;
ore_max = 29;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Global Vars

globalvar room_smelting_width;  //Left
globalvar room_game_width;      //center
globalvar room_shop_width;      //Right
globalvar room_blacksmith_width;//Bottom

globalvar Index;
globalvar ore_max;
globalvar ore_min;
globalvar money;
globalvar moeda;
globalvar amoney;
globalvar damage;
globalvar roomwidth;
globalvar roomheight;

//Set the initial value
room_smelting_width = 640;
room_game_width = 1280;
room_shop_width = 1920;
room_blacksmith_width= 1280;

roomwidth = room_width/2;
roomheight = room_height;
money = 0;
moeda = "";
auxiliar = 0;
damage = 1;
Index = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Controls the resume/pause music

if keyboard_check_pressed(ord('P')) &amp;&amp; music_is_on
{
    audio_pause_sound(index_music);
    music_is_on = false;
}
else if keyboard_check_pressed(ord('P')) &amp;&amp; !music_is_on
{
    audio_resume_sound(index_music);
    music_is_on = true;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Change and limite the ore

if keyboard_check_pressed(vk_right) || keyboard_check_pressed(ord('D'))
{
    obj_ore.index += 1;
    if obj_ore.index &gt; ore_max
        obj_ore.index = ore_max;
    life = minerais[#Min.life,obj_ore.index];
}
if keyboard_check_pressed(vk_left)  || keyboard_check_pressed(ord('A'))
{
    obj_ore.index -= 1;
    if obj_ore.index &lt; ore_min
        obj_ore.index = ore_min;
    life = minerais[#Min.life,obj_ore.index];
}



</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Interpolate
if(Index == 0) {
    view_xview[0] = lerp(view_xview[0], 0, 0.1);
    view_yview[0] = lerp(view_yview[0], 0, 0.1);
} else if(Index == 1) {
    view_xview[0] = lerp(view_xview[0], room_game_width/2,0.1);
    view_yview[0] = lerp(view_yview[0], 0, 0.1);
} else if(Index == 2) {
    view_xview[0] = lerp(view_xview[0], room_game_width,0.1);
    view_yview[0] = lerp(view_yview[0], 0, 0.1);
} else if(Index == 3) {
    view_xview[0] = lerp(view_xview[0], room_game_width/2,0.1);
    view_yview[0] = lerp(view_yview[0], 480, 0.1);
}


//    case 1: view_xview[0] = lerp(view_xview[0], room_game_width/2,       0.1); break;
//    case 2: view_xview[0] = lerp(view_xview[0], room_shop_width - 640,   0.1); break;
//    case 3: view_xview[0] = lerp(view_xview[0], room_game_width/2,       0.1); break;
                     //  view_yview[0] = lerp(view_yview[0], 480,                     0.1); break;
//}
    
/*
if(screen_game)
{
    view_xview[0] = lerp(view_xview[0], 0, 0.1);
else
    view_xview[0] = lerp(view_xview[0], roomwidth, 0.1);
/*
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
